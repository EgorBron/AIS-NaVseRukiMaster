
// Рассчитать начисления для оклада или премии, проведенные в регистре рассчета.
// 
// Параметры:
//  НаборЗаписейРегистра - РегистрРасчетаНаборЗаписей -  
//  ТребуемыйВидРассчета - ПланВидовРасчетаСсылка - 
//  СписокСотрудников - Массив из СтрокаТаблицыЗначений - 
Процедура РассчитатьНачисления(
	НаборЗаписейРегистра,
	ТребуемыйВидРассчета,
	СписокСотрудников
) экспорт	
	Рег = НаборЗаписейРегистра.Отбор.Регистратор.Значение;
	ЭтоОклад = ТребуемыйВидРассчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад;
	ЭтоПремия = ТребуемыйВидРассчета = ПланыВидовРасчета.ОсновныеНачисления.Премия;
	
	Запрос = новый Запрос;
	
	// Не запрещается уменьшить количество кода, так ведь?
	Если ЭтоОклад тогда
		Запрос.Текст = "выбрать
		|	НачислГрафик.ЗначениеПериодДействия как Норма,
		|	НачислГрафик.ЗначениеФактическийПериодДействия как Факт,
		|	НачислГрафик.НомерСтроки как НомерСтроки
		|из РегистрРасчета.Начисления.ДанныеГрафика(Регистратор = &Регистратор
		|	и ВидРасчета = &ВидРасчета и Сотрудник в (&СписокСотрудников)
		|) как НачислГрафик";
	ИначеЕсли ЭтоПремия тогда
		Запрос.Текст = "выбрать
		|	НачислБаза.РезультатБаза как База,
		|	НачислБаза.НомерСтроки как НомерСтроки
		|из РегистрРасчета.Начисления.БазаНачисления(
		|	&ИзмеренияОсновного, &ИзмеренияБазового, ,
		|	Регистратор = &Регистратор и ВидРасчета = &ВидРасчета и Сотрудник в (&СписокСотрудников)
		|) как НачислБаза";
		Измер = новый Массив(1);
		Измер[0] = "Сотрудник";
		Запрос.УстановитьПараметр("ИзмеренияОсновного", Измер);
		Запрос.УстановитьПараметр("ИзмеренияБазового", Измер);
	конецесли;
	
	Запрос.УстановитьПараметр("Регистратор", Рег);
	Запрос.УстановитьПараметр("ВидРасчета", ТребуемыйВидРассчета);
	Запрос.УстановитьПараметр("СписокСотрудников", СписокСотрудников);
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Во имя Нуралиева, весь скоп разработчиков ЯПа 1С - храни мягкую типизацию!
	// (это шутка, если что)
	Для каждого Запись из НаборЗаписейРегистра цикл
		Номер = новый Структура("НомерСтроки");
		Номер.НомерСтроки = Запись.НомерСтроки;
		Выборка.Сбросить();
		
		Если Выборка.НайтиСледующий(Номер) тогда
			Если ЭтоОклад тогда
				Если Выборка.Норма = 0 Тогда
					Сообщения.Инфо(
					"Вид расчета: Оклад — нет рабочих дней в заданном периоде");
					Запись.Результат = 0;
					Продолжить; // нас не интересуют дальнейшие операции в цикле
				Иначе
					Запись.Результат = (Запись.ИсходныеДанные / Выборка.Норма) * Выборка.Факт;
				конецесли;
			ИначеЕсли ЭтоПремия тогда
				Запись.Результат = Выборка.База * (10 / 100)
			конецесли;
			
			Сообщения.Инфо(
					 "Выполнен расчет " + Запись.Регистратор
					 + " – " + Запись.ВидРасчета + " – "
					 + Запись.Сотрудник);
		конецесли;
	конеццикла;
КонецПроцедуры


// Перерассчитать начисления, проведенные в регистре рассчета, по виду.
// 
// Параметры:
//  ТребуемыйВидРассчета - Строка - 
Процедура ПерерассчитатьНачисления(ТребуемыйВидРассчета) экспорт
	Запрос = новый Запрос(
	"выбрать
	|	НачислПерерасчет.ОбъектПерерасчета,
	|	НачислПерерасчет.Сотрудник
	|из РегистрРасчета.Начисления.Перерасчет как НачислПерерасчет
	|где НачислПерерасчет.ВидРасчета = &ВидРасчета
	|итоги по НачислПерерасчет.ОбъектПерерасчета");
	Запрос.УстановитьПараметр("ВидРасчета", ТребуемыйВидРассчета);
	
	Сотрудники = новый СписокЗначений;
	
	ВыборкаПоРег = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоРег.Следующий() цикл
		Рег = ВыборкаПоРег.ОбъектПерерасчета;
		ВыборкаПоСотр = ВыборкаПоРег.Выбрать();
		Сотрудники.Очистить();
		Пока ВыборкаПоСотр.Следующий() цикл
			Сотрудники.Добавить(ВыборкаПоСотр.Сотрудник);
		конеццикла;
		
		НаборЗаписей = РегистрыРасчета.Начисления.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Значение = Рег;
		НаборЗаписей.Прочитать();
		
		// ибо нефиг так делать.
		//@skip-check query-in-loop
		РассчитатьНачисления(НаборЗаписей, ТребуемыйВидРассчета, Сотрудники);
		НаборЗаписей.Записать(, Истина);
		
		НаборЗаписейПерерасчета = РегистрыРасчета.Начисления.Перерасчеты.Перерасчет.СоздатьНаборЗаписей();
		НаборЗаписейПерерасчета.Отбор.ОбъектПерерасчета.Значение = Рег;
		НаборЗаписейПерерасчета.Записать();
	конеццикла;
КонецПроцедуры

